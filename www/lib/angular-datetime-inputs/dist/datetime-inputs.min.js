"use strict";
angular.module("g1b.datetime-inputs", ["g1b.scroll-events"]).directive("datetimeInput", ["$document", "$timeout", function(e, t) {
    return {
        restrict: "E",
        scope: {
            datetime: "=",
            format: "=?",
            dateFormat: "=?",
            timeFormat: "=?",
            minDate: "=?",
            maxDate: "=?",
            hourStep: "=?",
            minuteStep: "=?",
            secondStep: "=?",
            allowClear: "=?",
            onChange: "&",
            onClose: "&?",
            placeholder: "@",
            clearText: "@",
            closeText: "@",
            cssClass: "@"
        },
        replace: !0,
        template: '<div class="datetime-input datetime"><div ng-click="toggleEditPopover()" class="display" ng-class="{\'active\': !!selected, \'warning\': !!warning, \'{{cssClass}}\': !!cssClass}"><div class="date" ng-bind="datetime.format(dateFormat || \'YYYY/MM/DD\')"></div><div class="time" ng-bind="datetime.format(timeFormat || \'HH : mm : ss\')"></div><div ng-if="!datetime" class="placeholder" ng-bind="placeholder"></div></div><div class="edit-popover" ng-show="!!selected"><div class="header" ng-click="calendarActive = !calendarActive" ng-bind="selected.format(\'YYYY/MM/DD\')"></div><div class="calendar" ng-show="!!calendarActive"><div class="calendar-header" scroll-up="calendar.add(1, \'months\')" scroll-down="calendar.subtract(1, \'months\')"><div class="arrow arrow-left" ng-click="calendar.subtract(1, \'months\')"></div><span ng-bind="calendar.format(\'YYYY\') === current.format(\'YYYY\') ? calendar.format(\'MM\') : calendar.format(\'MM YYYY\')"></span><div class="arrow arrow-right" ng-click="calendar.add(1, \'months\')"></div></div><div class="calendar-body"><div class="weekdays"><span class="weekday" ng-repeat="weekday in \'weeeeek\' track by $index" ng-bind="calendar.clone().startOf(\'week\').add($index, \'days\').format(\'ddd\')"></span></div><div class="week" ng-repeat="week in \'months\' | limitTo: ((calendar.clone().endOf(\'month\').week() - calendar.clone().startOf(\'month\').week()) + 1) track by $index"><span class="date" ng-repeat="date in \'weeeeek\' track by $index" ng-class="{ \'current\': calendar.clone().startOf(\'month\').add($parent.$index, \'weeks\').weekday($index).startOf(\'day\').isSame(current.clone().startOf(\'day\')), \'active\': calendar.clone().startOf(\'month\').add($parent.$index, \'weeks\').weekday($index).startOf(\'day\').isSame(selected.clone().startOf(\'day\')), \'inactive\': calendar.clone().startOf(\'month\').add($parent.$index, \'weeks\').weekday($index).month() !== calendar.month() }" ng-click="update(selected.clone().year(calendar.clone().startOf(\'month\').add($parent.$index, \'weeks\').weekday($index).year()).month(calendar.clone().startOf(\'month\').add($parent.$index, \'weeks\').weekday($index).month()).date(calendar.clone().startOf(\'month\').add($parent.$index, \'weeks\').weekday($index).date()), true)" ng-bind="calendar.clone().startOf(\'month\').add($parent.$index, \'weeks\').weekday($index).date()"></span></div></div></div><div class="timer"><div class="timer-hours" scroll-up="update(selected.clone().add(hourStep || 1, \'hours\'))" scroll-down="update(selected.clone().subtract(hourStep || 1, \'hours\'))"><div class="arrow arrow-up" ng-click="update(selected.clone().add(hourStep || 1, \'hours\'))"></div><span ng-bind="selected.format(\'HH\')"></span><div class="arrow arrow-down" ng-click="update(selected.clone().subtract(hourStep || 1, \'hours\'))"></div></div><div class="timer-divider">:</div><div class="timer-minutes" scroll-up="update(selected.clone().add(minuteStep || 1, \'minutes\'))" scroll-down="update(selected.clone().subtract(minuteStep || 1, \'minutes\'))"><div class="arrow arrow-up" ng-click="update(selected.clone().add(minuteStep || 1, \'minutes\'))"></div><span ng-bind="selected.format(\'mm\')"></span><div class="arrow arrow-down" ng-click="update(selected.clone().subtract(minuteStep || 1, \'minutes\'))"></div></div><div class="timer-divider">:</div><div class="timer-seconds" scroll-up="update(selected.clone().add(secondStep || 1, \'seconds\'))" scroll-down="update(selected.clone().subtract(secondStep || 1, \'seconds\'))"><div class="arrow arrow-up" ng-click="update(selected.clone().add(secondStep || 1, \'seconds\'))"></div><span ng-bind="selected.format(\'ss\')"></span><div class="arrow arrow-down" ng-click="update(selected.clone().subtract(secondStep || 1, \'seconds\'))"></div></div></div><div class="clear-button" ng-if="!!datetime && allowClear"><div ng-click="update()" ng-bind="clearText || \'Clear\'"></div></div><div class="close-button"><div ng-click="close()" ng-bind="closeText || \'Close\'"></div></div></div></div>',
        compile: function() {
            return {
                pre: function() {},
                post: function(a, d) {
                    a.current = moment(), a.datetime && !a.datetime._isAMomentObject && (a.datetime = moment(a.datetime, a.format)), a.toggleEditPopover = function() {
                        a.selected ? a.selected = void 0 : (a.selected = a.datetime || moment(), a.calendar = a.selected.clone())
                    }, a.update = function(e, d) {
                        a.selected.isSame(e) && a.datetime || (e ? (!a.minDate || e > a.minDate) && (!a.maxDate || e < a.maxDate) ? (a.selected.year(e.year()).month(e.month()).date(e.date()).hours(e.hours()).minutes(e.minutes()).seconds(e.seconds()), (a.selected.clone().startOf("week").month() !== a.calendar.month() && a.selected.clone().endOf("week").month() !== a.calendar.month() || d) && (a.calendar = a.selected.clone()), a.datetime || (a.datetime = a.selected), a.$$postDigest(function() {
                            a.onChange()
                        })) : (a.warning = !0, t(function() {
                            a.warning = !1
                        }, 250)) : a.selected = a.datetime = void 0)
                    }, a.close = function() {
                        a.selected = "", a.calendarActive = !1, a.onClose && a.onClose()
                    }, e.on("mousedown", function(e) {
                        a.selected && !d[0].contains(e.target) && a.$apply(function() {
                            a.close()
                        })
                    }), e.on("keyup", function(e) {
                        a.selected && 27 === e.keyCode && a.$apply(function() {
                            a.close()
                        })
                    })
                }
            }
        }
    }
}]);
"use strict";
angular.module("g1b.datetime-inputs").directive("dateInput", ["$document", "$timeout", function(e, a) {
    return {
        restrict: "E",
        scope: {
            date: "=",
            format: "=?",
            dateFormat: "=?",
            minDate: "=?",
            maxDate: "=?",
            allowClear: "=?",
            onChange: "&",
            onClose: "&?",
            placeholder: "@",
            clearText: "@",
            closeText: "@",
            cssClass: "@"
        },
        replace: !0,
        template: "<div class=\"datetime-input date\"><div ng-click=\"toggleEditPopover()\" class=\"display\" ng-class=\"{'active': !!selected, 'warning': !!warning, '{{cssClass}}': !!cssClass}\"><div class=\"date\" ng-bind=\"date.format(dateFormat || 'YYYY/MM/DD')\"></div><div ng-if=\"!date\" class=\"placeholder\" ng-bind=\"placeholder\"></div></div><div class=\"edit-popover\" ng-show=\"!!selected\"><div class=\"header\" ng-bind=\"selected.format('YYYY/MM/DD')\"></div><div class=\"calendar\"><div class=\"calendar-header\" scroll-up=\"calendar.add(1, 'months')\" scroll-down=\"calendar.subtract(1, 'months')\"><div class=\"arrow arrow-left\" ng-click=\"calendar.subtract(1, 'months')\"></div><span ng-bind=\"calendar.format('YYYY') === current.format('YYYY') ? calendar.format('MM') : calendar.format('MM YYYY')\"></span><div class=\"arrow arrow-right\" ng-click=\"calendar.add(1, 'months')\"></div></div><div class=\"calendar-body\"><div class=\"weekdays\"><span class=\"weekday\" ng-repeat=\"weekday in 'weeeeek' track by $index\" ng-bind=\"calendar.clone().startOf('week').add($index, 'days').format('ddd')\"></span></div><div class=\"week\" ng-repeat=\"week in 'months' | limitTo: ((calendar.clone().endOf('month').week() - calendar.clone().startOf('month').week()) + 1) track by $index\"><span class=\"date\" ng-repeat=\"date in 'weeeeek' track by $index\" ng-class=\"{ 'current': calendar.clone().startOf('month').add($parent.$index, 'weeks').weekday($index).startOf('day').isSame(current.clone().startOf('day')), 'active': calendar.clone().startOf('month').add($parent.$index, 'weeks').weekday($index).startOf('day').isSame(selected.clone().startOf('day')), 'inactive': calendar.clone().startOf('month').add($parent.$index, 'weeks').weekday($index).month() !== calendar.month() }\" ng-click=\"update(selected.clone().year(calendar.clone().startOf('month').add($parent.$index, 'weeks').weekday($index).year()).month(calendar.clone().startOf('month').add($parent.$index, 'weeks').weekday($index).month()).date(calendar.clone().startOf('month').add($parent.$index, 'weeks').weekday($index).date()), true)\" ng-bind=\"calendar.clone().startOf('month').add($parent.$index, 'weeks').weekday($index).date()\"></span></div></div></div><div class=\"clear-button\" ng-if=\"!!date && allowClear\"><div ng-click=\"update()\" ng-bind=\"clearText || 'Clear'\"></div></div><div class=\"close-button\"><div ng-click=\"close()\" ng-bind=\"closeText || 'Close'\"></div></div></div></div>",
        compile: function() {
            return {
                pre: function() {},
                post: function(n, t) {
                    n.current = moment(), n.date && !n.date._isAMomentObject && (n.date = moment(n.date, n.format)), n.toggleEditPopover = function() {
                        n.selected ? n.selected = void 0 : (n.selected = n.date || moment(), n.calendar = n.selected.clone())
                    }, n.update = function(e, t) {
                        n.selected.isSame(e) && n.date || (e ? (!n.minDate || e > n.minDate) && (!n.maxDate || e < n.maxDate) ? (n.selected.year(e.year()).month(e.month()).date(e.date()).hours(e.hours()).minutes(e.minutes()).seconds(e.seconds()), (n.selected.clone().startOf("week").month() !== n.calendar.month() || t) && (n.calendar = n.selected.clone()), n.date || (n.date = n.selected), n.$$postDigest(function() {
                            n.onChange()
                        }), n.close()) : (n.warning = !0, a(function() {
                            n.warning = !1
                        }, 250)) : n.selected = n.date = void 0)
                    }, n.close = function() {
                        n.selected = "", n.onClose && n.onClose()
                    }, e.on("mousedown", function(e) {
                        n.selected && !t[0].contains(e.target) && n.$apply(function() {
                            n.close()
                        })
                    }), e.on("keyup", function(e) {
                        n.selected && 27 === e.keyCode && n.$apply(function() {
                            n.close()
                        })
                    })
                }
            }
        }
    }
}]);
"use strict";
angular.module("g1b.datetime-inputs").directive("timeInput", ["$document", "$timeout", function(e, t) {
    return {
        restrict: "E",
        scope: {
            time: "=",
            format: "=?",
            timeFormat: "=?",
            minDate: "=?",
            maxDate: "=?",
            hourStep: "=?",
            minuteStep: "=?",
            secondStep: "=?",
            allowClear: "=?",
            onChange: "&",
            onClose: "&?",
            placeholder: "@",
            clearText: "@",
            closeText: "@",
            cssClass: "@"
        },
        replace: !0,
        template: '<div class="datetime-input time"><div ng-click="toggleEditPopover()" class="display" ng-class="{\'active\': !!selected, \'warning\': !!warning, \'{{cssClass}}\': !!cssClass}"><div class="time" ng-bind="time.format(timeFormat || \'HH : mm : ss\')"></div><div ng-if="!time" class="placeholder" ng-bind="placeholder"></div></div><div class="edit-popover" ng-show="!!selected"><div class="header" ng-bind="selected.format(\'YYYY/MM/DD\')"></div><div class="timer"><div class="timer-hours" scroll-up="update(selected.clone().add(hourStep || 1, \'hours\'))" scroll-down="update(selected.clone().subtract(hourStep || 1, \'hours\'))"><div class="arrow arrow-up" ng-click="update(selected.clone().add(hourStep || 1, \'hours\'))"></div><span ng-bind="selected.format(\'HH\')"></span><div class="arrow arrow-down" ng-click="update(selected.clone().subtract(hourStep || 1, \'hours\'))"></div></div><div class="timer-divider">:</div><div class="timer-minutes" scroll-up="update(selected.clone().add(minuteStep || 1, \'minutes\'))" scroll-down="update(selected.clone().subtract(minuteStep || 1, \'minutes\'))"><div class="arrow arrow-up" ng-click="update(selected.clone().add(minuteStep || 1, \'minutes\'))"></div><span ng-bind="selected.format(\'mm\')"></span><div class="arrow arrow-down" ng-click="update(selected.clone().subtract(minuteStep || 1, \'minutes\'))"></div></div><div class="timer-divider">:</div><div class="timer-seconds" scroll-up="update(selected.clone().add(secondStep || 1, \'seconds\'))" scroll-down="update(selected.clone().subtract(secondStep || 1, \'seconds\'))"><div class="arrow arrow-up" ng-click="update(selected.clone().add(secondStep || 1, \'seconds\'))"></div><span ng-bind="selected.format(\'ss\')"></span><div class="arrow arrow-down" ng-click="update(selected.clone().subtract(secondStep || 1, \'seconds\'))"></div></div></div><div class="clear-button" ng-if="!!time && allowClear"><div ng-click="update()" ng-bind="clearText || \'Clear\'"></div></div><div class="close-button"><div ng-click="close()" ng-bind="closeText || \'Close\'"></div></div></div></div>',
        compile: function() {
            return {
                pre: function() {},
                post: function(s, d) {
                    s.time && !s.time._isAMomentObject && (s.time = moment(s.time, s.format)), s.toggleEditPopover = function() {
                        s.selected ? s.selected = void 0 : s.selected = s.time || moment()
                    }, s.update = function(e, d) {
                        s.selected.isSame(e) && s.time || (e ? (!s.minDate || e > s.minDate) && (!s.maxDate || e < s.maxDate) ? (s.selected.year(e.year()).month(e.month()).date(e.date()).hours(e.hours()).minutes(e.minutes()).seconds(e.seconds()), s.time || (s.time = s.selected), s.$$postDigest(function() {
                            s.onChange()
                        })) : (s.warning = !0, t(function() {
                            s.warning = !1
                        }, 250)) : s.selected = s.time = void 0)
                    }, s.close = function() {
                        s.selected = "", s.onClose && s.onClose()
                    }, e.on("mousedown", function(e) {
                        s.selected && !d[0].contains(e.target) && s.$apply(function() {
                            s.close()
                        })
                    }), e.on("keyup", function(e) {
                        s.selected && 27 === e.keyCode && s.$apply(function() {
                            s.close()
                        })
                    })
                }
            }
        }
    }
}]);